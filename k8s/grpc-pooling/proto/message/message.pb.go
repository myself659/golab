// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/message/message.proto

/*
Package message is a generated protocol buffer package.

It is generated from these files:
	proto/message/message.proto

It has these top-level messages:
	JobRequest
	JobResponse
*/
package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JobRequest struct {
	Id       string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Base     float32 `protobuf:"fixed32,2,opt,name=base" json:"base,omitempty"`
	Exponent float32 `protobuf:"fixed32,3,opt,name=exponent" json:"exponent,omitempty"`
}

func (m *JobRequest) Reset()                    { *m = JobRequest{} }
func (m *JobRequest) String() string            { return proto.CompactTextString(m) }
func (*JobRequest) ProtoMessage()               {}
func (*JobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *JobRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *JobRequest) GetBase() float32 {
	if m != nil {
		return m.Base
	}
	return 0
}

func (m *JobRequest) GetExponent() float32 {
	if m != nil {
		return m.Exponent
	}
	return 0
}

type JobResponse struct {
	Id       string  `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	WorkerId string  `protobuf:"bytes,2,opt,name=worker_id,json=workerId" json:"worker_id,omitempty"`
	Result   float32 `protobuf:"fixed32,3,opt,name=result" json:"result,omitempty"`
}

func (m *JobResponse) Reset()                    { *m = JobResponse{} }
func (m *JobResponse) String() string            { return proto.CompactTextString(m) }
func (*JobResponse) ProtoMessage()               {}
func (*JobResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *JobResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *JobResponse) GetWorkerId() string {
	if m != nil {
		return m.WorkerId
	}
	return ""
}

func (m *JobResponse) GetResult() float32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*JobRequest)(nil), "mycodesmells.golangexamples.k8s.loadbalancer.message.JobRequest")
	proto.RegisterType((*JobResponse)(nil), "mycodesmells.golangexamples.k8s.loadbalancer.message.JobResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Worker service

type WorkerClient interface {
	Work(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobResponse, error)
}

type workerClient struct {
	cc *grpc.ClientConn
}

func NewWorkerClient(cc *grpc.ClientConn) WorkerClient {
	return &workerClient{cc}
}

func (c *workerClient) Work(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobResponse, error) {
	out := new(JobResponse)
	err := grpc.Invoke(ctx, "/mycodesmells.golangexamples.k8s.loadbalancer.message.Worker/Work", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Worker service

type WorkerServer interface {
	Work(context.Context, *JobRequest) (*JobResponse, error)
}

func RegisterWorkerServer(s *grpc.Server, srv WorkerServer) {
	s.RegisterService(&_Worker_serviceDesc, srv)
}

func _Worker_Work_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkerServer).Work(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mycodesmells.golangexamples.k8s.loadbalancer.message.Worker/Work",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkerServer).Work(ctx, req.(*JobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Worker_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mycodesmells.golangexamples.k8s.loadbalancer.message.Worker",
	HandlerType: (*WorkerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Work",
			Handler:    _Worker_Work_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/message/message.proto",
}

func init() { proto.RegisterFile("proto/message/message.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0xd1, 0xbf, 0x4b, 0xc3, 0x40,
	0x14, 0x07, 0x70, 0x13, 0x4b, 0x68, 0x9e, 0xe0, 0x70, 0x83, 0x84, 0x76, 0x29, 0x99, 0xba, 0xf4,
	0x0e, 0xd4, 0xa1, 0xa3, 0xba, 0x48, 0xc5, 0x29, 0x8b, 0xe0, 0x22, 0x97, 0xdc, 0x23, 0x86, 0x5c,
	0xf2, 0x62, 0x5e, 0x82, 0xf5, 0x8f, 0x70, 0xf7, 0xcf, 0x95, 0x5e, 0x1a, 0x7f, 0xe0, 0x66, 0xa7,
	0x7b, 0xef, 0xcb, 0xdd, 0x07, 0xbe, 0x1c, 0xcc, 0x9b, 0x96, 0x3a, 0x52, 0x15, 0x32, 0xeb, 0x1c,
	0xc7, 0x53, 0xba, 0x54, 0x5c, 0x56, 0x6f, 0x19, 0x19, 0xe4, 0x0a, 0xad, 0x65, 0x99, 0x93, 0xd5,
	0x75, 0x8e, 0x5b, 0x5d, 0x35, 0x16, 0x59, 0x96, 0x6b, 0x96, 0x96, 0xb4, 0x49, 0xb5, 0xd5, 0x75,
	0x86, 0xad, 0xdc, 0xbf, 0x8d, 0xef, 0x01, 0xee, 0x28, 0x4d, 0xf0, 0xa5, 0x47, 0xee, 0xc4, 0x29,
	0xf8, 0x85, 0x89, 0xbc, 0x85, 0xb7, 0x0c, 0x13, 0xbf, 0x30, 0x42, 0xc0, 0x24, 0xd5, 0x8c, 0x91,
	0xbf, 0xf0, 0x96, 0x7e, 0xe2, 0x66, 0x31, 0x83, 0x29, 0x6e, 0x1b, 0xaa, 0xb1, 0xee, 0xa2, 0x63,
	0x97, 0x7f, 0xed, 0x71, 0x02, 0x27, 0x4e, 0xe3, 0x86, 0x6a, 0xc6, 0x3f, 0xdc, 0x1c, 0xc2, 0x57,
	0x6a, 0x4b, 0x6c, 0x9f, 0x0a, 0xe3, 0xcc, 0x30, 0x99, 0x0e, 0xc1, 0xc6, 0x88, 0x33, 0x08, 0x5a,
	0xe4, 0xde, 0x8e, 0xea, 0x7e, 0x3b, 0xff, 0xf0, 0x20, 0x78, 0x70, 0x97, 0xc4, 0xbb, 0x07, 0x93,
	0xdd, 0x28, 0xae, 0xe4, 0x7f, 0xca, 0xca, 0xef, 0xa6, 0xb3, 0xeb, 0x03, 0x84, 0xa1, 0x5d, 0x7c,
	0x74, 0xb3, 0x79, 0xbc, 0xcd, 0x8b, 0xee, 0xb9, 0x4f, 0x65, 0x46, 0x95, 0xfa, 0x09, 0xaa, 0x01,
	0x5c, 0x8d, 0xa2, 0x2a, 0xd7, 0xac, 0x76, 0xe2, 0x6a, 0x24, 0xd5, 0xaf, 0xbf, 0x4c, 0x03, 0xb7,
	0x5e, 0x7c, 0x06, 0x00, 0x00, 0xff, 0xff, 0x06, 0xf9, 0x09, 0x04, 0xe3, 0x01, 0x00, 0x00,
}
